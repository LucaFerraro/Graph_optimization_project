reset;

model 1_Camajori_10584438_ILP_CR.mod;

data instanceAB1.dat;

option solver 'cplex';
option cplex_options 'timelimit=600'; # in seconds

# Definition of the problem
problem ILP: x, y, z, Cost, load_balance, node_capacity, arc_capacity;

# Definition of the CR problem
problem CR: x_CR, y_CR, z_CR, Cost_CR, load_balance_CR, node_capacity_CR, arc_capacity_CR;

# Paramters for computational time
param tic;
param toc;
param ILP_time;
param CR_time;
param gap;


printf"-----------------------------------------------------------------------------\n" > results_1.txt;
printf"  			 			    ILP 			                                \n" > results_1.txt;
printf"-----------------------------------------------------------------------------\n" > results_1.txt;

let tic := _ampl_user_time;

solve ILP;

display z > results_1.txt;
display y > results_1.txt;
display Cost > results_1.txt;

# Considering as time total solver time, the sum 
let toc := _ampl_user_time + _total_solve_user_time;
let ILP_time := toc - tic;
printf"ILP time: %g\n\n", ILP_time >results_1.txt;
display z;

let tic := toc;


printf"-----------------------------------------------------------------------------\n" > results_1.txt;
printf"  			 			    CR relaxation	                                \n" > results_1.txt;
printf"-----------------------------------------------------------------------------\n" > results_1.txt;

solve CR;
display Cost_CR > results_1.txt;

# Considering as time total solver time, the sum 
let toc := _ampl_user_time + _total_solve_user_time;
let CR_time := toc - tic;
printf"\CR time: %g\n", CR_time >results_1.txt;


let gap := (Cost - Cost_CR)/Cost;
printf"gap: %g", gap >results_1.txt;








